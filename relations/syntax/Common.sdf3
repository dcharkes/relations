module Common

lexical syntax // IDs

  ID = [a-zA-Z\_][0-9a-zA-Z\_]*
  ID = Keyword {reject}        
                
lexical restrictions
	
	ID -/- [a-zA-Z0-9\_]

lexical syntax // Keywords

  Keyword = "and"
  Keyword = "as"
  Keyword = "avg"
	Keyword = "Boolean"
	Keyword = "concat"
	Keyword = "conj"
  Keyword = "count"
  Keyword = "default"
	Keyword = "Datetime"
	Keyword = "disj"
	Keyword = "entity"
	Keyword = "false"
	Keyword = "Float"
  Keyword = "functions"
	Keyword = "Int"
	Keyword = "max"
	Keyword = "match"
	Keyword = "min"
  Keyword = "no"
  Keyword = "not"
  Keyword = "or"
	Keyword = "relationship"
	Keyword = "String"
	Keyword = "sum"
	Keyword = "this"
  Keyword = "true"

lexical restrictions

	Keyword -/- [a-zA-Z0-9\_]

lexical syntax // literals

  INT 					= "-"? [0-9]+
  FLOAT         = "-"? [0-9]+ "." [0-9]+
  STRING 				= StringChar* 
  StringChar 		= ~[\"\n] 
  StringChar 		= "\\\"" 
  StringChar 		= BackSlashChar 
  BackSlashChar = "\\"
  DATETIME      = [0-9][0-9][0-9][0-9] "-" [0-9][0-9]? "-" [0-9][0-9]? LAYOUT [0-9][0-9]? ":" [0-9][0-9] ":" [0-9][0-9] 

lexical syntax // layout

  LAYOUT 				= [\ \t\n\r] 
  CommentChar 	= [\*] 
  LAYOUT 				= "/*" ~[\*] | CommentChar* "*/" 
  LAYOUT 				= "//" ~[\n\r]* [\n\r] | EOF 
  EOF 					=  

lexical restrictions

	// Ensure greedy matching for lexicals
	
	CommentChar   -/- [\/]
	INT           -/- [0-9]
	FLOAT         -/- [0-9\.]
	DATETIME      -/- [0-9]

	EOF           -/- ~[]
	
	BackSlashChar -/- [\"]

context-free restrictions

	// Ensure greedy matching for comments
	
	LAYOUT? -/- [\ \t\n\r]
	LAYOUT? -/- [\/].[\/]
	LAYOUT? -/- [\/].[\*]

