module naming/names

imports // constructors

	signatures/Data-sig
	signatures/Execute-sig
	signatures/Expressions-sig
	signatures/Model-sig
	signatures/Modules-sig
	signatures/Types-sig
	api/constructors
  desugaring/constructors
  naming/_notNaBL
	
// imports // use custom runtime libraries
// 
//   lib/nabl/-
//   lib/task/-
//   lib/properties/-
//   lib/types/-
//   lib/relations/-
//   lib/editor/-
	
namespaces
	
	Module
	Entity
	Entity2                            //Nasty Hack to enforce no duplicate entity types
	EntityInstance
	Attribute
	Relation
	Role
	Inverse
	Shortcut
	This
  MemberType
  MemberValue
  Function
  Param

properties

	derivation-type 		 of Attribute	  : DerivationType	//Derivation(), DefaultValue() or Normal()
	multiplicity				 of Attribute	  : Multiplicity
	multiplicity-inverse of Role        : Multiplicity
	ordering             of Role        : Ordering
	ordering-inverse     of Role        : Ordering
	inverse   					 of Role  		  : Inverse
	origin-role					 of Inverse		  : Role
	origin-role2				 of Shortcut	  : Role
	rel-ty               of Shortcut    : Entity
	side                 of Relation    : Term
	member-origin        of MemberValue : Term
	param-types          of Function    : Term
	
binding rules // modules

	ModuleDesugared(m, _) : 
		defines Module m
		scopes Entity
		scopes Entity2
		scopes EntityInstance
		scopes Function

binding rules // functions

  Function(f-name, param*, f-ty, f-mu, f-or, expr):
    defines Function f-name
      of type f-ty
      of multiplicity f-mu
      of ordering f-or
      of param-types param-ty*
      where param* has type param-ty*
    scopes Param
  
  Param(p-name, p-ty, p-mu, p-or):
    defines Param p-name
      of type p-ty
      of multiplicity p-mu
      of ordering p-or

binding rules // model

	Entity(ent-or-rel, e-ty, _) :
		defines Entity2 e-ty             //Nasty Hack to enforce no duplicate entity types
		defines non-unique Entity e-ty
		scopes Attribute
		scopes Role
		scopes This
		implicitly defines This This()
			of type e-ty

	Attribute(a, a-ty, a-mu, None()) :
		defines Attribute a
			of type a-ty
			of multiplicity a-mu
			of ordering Ordered()
			of derivation-type Normal()
			
	Attribute(a, a-ty, a-mu, Derivation(_, a-dt)) :
		defines Attribute a
			of type a-ty
			of multiplicity a-mu
			of ordering Ordered()
			of derivation-type a-dt

	Role(NaBLHelp(role-ty, role-ty2), inverseName, role-mu, role-ord, role) :
		refers to Entity2 role-ty //triggers unresolved reference errors, but provides no resolving
		defines Role role
			of type role-ty2
			of multiplicity One()
			of multiplicity-inverse role-mu
			of ordering Ordered()
			of ordering-inverse role-ord
			of inverse inverseName
			of rel-ty this-ty2
      where This() resolves to This this2
      and this2 has type this-ty2
		defines non-unique Entity role-ty2
		  scopes Inverse
		defines Inverse inverseName
			of multiplicity role-mu
      of multiplicity-inverse One()
			of ordering role-ord
      of ordering-inverse Ordered()
			of type this-ty
			of origin-role role
			where This() resolves to This this
			and this has type this-ty

	Shortcut(NaBLHelp(RoleRef(role1), type1), shortcut1, NaBLHelp(RoleRef(role2), type2), shortcut2):
		defines non-unique Entity type1
			scopes Shortcut
		defines Shortcut shortcut1
			of type type2
			of multiplicity mu1
			of ordering or1
			of origin-role role1
			of origin-role2 role2
			of rel-ty rel-ty1
			where role1 resolves to Role role1def
			and role1def has multiplicity-inverse mu1
			and role1def has ordering-inverse or1
      and role1def has rel-ty rel-ty1
		defines non-unique Entity type2
			scopes Shortcut
		defines Shortcut shortcut2
			of type type1
			of multiplicity mu2
			of ordering or2
			of origin-role role2
			of origin-role2 role1
			of rel-ty rel-ty2
			where role2 resolves to Role role2def
			and role2def has multiplicity-inverse mu2
			and role2def has ordering-inverse or2
      and role2def has rel-ty rel-ty2

  Relation(NaBLHelp(left-ty1, left-ty2), left-name, left-mu, left-or, right-mu, right-or, NaBLHelp(right-ty1, right-ty2), right-name):
    defines non-unique Entity left-ty2
      scopes Relation
    defines Relation left-name
      of multiplicity left-mu
      of multiplicity-inverse right-mu
      of ordering left-or
      of ordering-inverse right-or
      of type right-ty2
      of inverse right-name
      of side Left()
    defines non-unique Entity right-ty2
      scopes Relation
    defines Relation right-name
      of multiplicity right-mu
      of multiplicity-inverse left-mu
      of ordering right-or
      of ordering-inverse left-or
      of type left-ty2
      of inverse left-name
      of side Right()

binding rules // data

  EntityInstance(e, EntityRef(e-ty), _) :
    defines EntityInstance e
      of type e-ty
      of multiplicity One()
      of ordering Ordered()
    scopes MemberValue
    scopes This
    implicitly defines This This()
      of type e-ty
      of multiplicity One()
      of ordering Ordered()
      
  EntityInstance(e, None(), _) :
    defines EntityInstance e
      of type e-ty
      of multiplicity One()
      of ordering Ordered()
      where MemberType() resolves to MemberType membertype
      and membertype has type e-ty
    scopes MemberValue
    scopes This
    implicitly defines This This()
      of type e-ty
      of multiplicity One()
      of ordering Ordered()

  RelationInstance(e, EntityRef(e-ty), _) :
    defines EntityInstance e
      of type e-ty
      of multiplicity One()
      of ordering Ordered()
    scopes MemberValue
    scopes This
    implicitly defines This This()
      of type e-ty
      of multiplicity One()
      of ordering Ordered()
      
  RelationInstance(e, None(), _) :
    defines EntityInstance e
      of type e-ty
      of multiplicity One()
      of ordering Ordered()
      where MemberType() resolves to MemberType membertype
      and membertype has rel-ty e-ty
    scopes MemberValue
    scopes This
    implicitly defines This This()
      of type e-ty
      of multiplicity One()
      of ordering Ordered()

  MemberValue(NaBLHelp(m@MemberRef(m-name), m2), value) :
    defines MemberValue m2
      of member-origin m-name
    scopes MemberType
    implicitly defines MemberType MemberType()
      of type m-ty
      of rel-ty r-ty
    where m has type m-ty
    and m has rel-ty r-ty

binding rules // references

	Ref(x) :
    refers to Param x
  otherwise
    refers to EntityInstance x
  otherwise
		refers to Attribute x	in Entity e-ty
		where This() resolves to This this
		and this has type e-ty
  otherwise
    refers to Relation x in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Role x in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
	otherwise
	  refers to Inverse x in Entity e-ty
		where This() resolves to This this
		and this has type e-ty
	otherwise
	  refers to Shortcut x in Entity e-ty
		where This() resolves to This this
		and this has type e-ty

	MemberAccess(exp, a) :
		refers to Attribute a in Entity e-ty
		where exp has type e-ty
  otherwise
    refers to Relation a in Entity e-ty
    where exp has type e-ty
  otherwise
    refers to Role a in Entity e-ty
    where exp has type e-ty
	otherwise
	  refers to Inverse a in Entity e-ty
	  where exp has type e-ty
	otherwise
	  refers to Shortcut a in Entity e-ty
	  where exp has type e-ty

	EntityRef(e) :
		refers to Entity e
  
  AttributeRef(a):
    refers to Attribute a in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
	
	RoleRef(r):
		refers to Role r in Entity e-ty
		where This() resolves to This this
		and this has type e-ty

  MemberRef(m):
    refers to Attribute m in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Relation m in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Shortcut m in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Role m in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Inverse m in Entity e-ty
    where This() resolves to This this
    and this has type e-ty

	EntityInstanceRef(e) :
		refers to EntityInstance e
	
	This() :
		refers to This This()
		
  Call(f-name, param*):
    refers to Function f-name


